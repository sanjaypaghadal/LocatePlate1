@using System.Security.Claims
@using System.Linq
@using System.Collections.Generic
@using Microsoft.AspNetCore.Http;
@inject LocatePlate.Service.Restaurants.IRestaurantService restaurantService
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor contextAccessor
@{
    var UserId = new Guid(contextAccessor.HttpContext.User.FindFirstValue(ClaimTypes.NameIdentifier));
    var RestaurantId = Convert.ToInt32(contextAccessor.HttpContext.Session.GetString(LocatePlate.Infrastructure.Constant.SessionContants.RestaurantId));
    var RestaurantName = contextAccessor.HttpContext.Session.GetString(LocatePlate.Infrastructure.Constant.SessionContants.RestaurantName);
    var LocationId = contextAccessor.HttpContext.Session.GetString(LocatePlate.Infrastructure.Constant.SessionContants.LocationId);
    var LocationName = contextAccessor.HttpContext.Session.GetString(LocatePlate.Infrastructure.Constant.SessionContants.LocationName);

    var restaurantList = restaurantService.GetByUser(UserId);

    var selectedrestaurant = restaurantList.Where(r => r.Id == RestaurantId).FirstOrDefault();
    //if (restaurantList.Count == 1 && restaurantList.FirstOrDefault().Id != RestaurantId)
    if (restaurantList.Count() > 0 && selectedrestaurant == null)
    {
        RestaurantId = restaurantList.FirstOrDefault().Id;
        RestaurantName = restaurantList.FirstOrDefault().Name;
        LocationId = $"{restaurantList.FirstOrDefault().LocationId}";
        LocationName = $"{restaurantList.FirstOrDefault().CityName}";

        contextAccessor.HttpContext.Session.SetString(LocatePlate.Infrastructure.Constant.SessionContants.RestaurantId, RestaurantId.ToString());
        contextAccessor.HttpContext.Session.SetString(LocatePlate.Infrastructure.Constant.SessionContants.RestaurantName, RestaurantName);
        contextAccessor.HttpContext.Session.SetString(LocatePlate.Infrastructure.Constant.SessionContants.LocationId, $"{LocationId}");
        contextAccessor.HttpContext.Session.SetString(LocatePlate.Infrastructure.Constant.SessionContants.LocationName, $"{LocationName}");

    }
    else if (restaurantList.Count() > 0 && RestaurantId == 0)
    {
        RestaurantId = restaurantList.FirstOrDefault().Id;
        RestaurantName = restaurantList.FirstOrDefault().Name;
        LocationId = $"{restaurantList.FirstOrDefault().LocationId}";
        LocationName = $"{restaurantList.FirstOrDefault().CityName}";

        contextAccessor.HttpContext.Session.SetString(LocatePlate.Infrastructure.Constant.SessionContants.RestaurantId, RestaurantId.ToString());
        contextAccessor.HttpContext.Session.SetString(LocatePlate.Infrastructure.Constant.SessionContants.RestaurantName, RestaurantName);
        contextAccessor.HttpContext.Session.SetString(LocatePlate.Infrastructure.Constant.SessionContants.LocationId, $"{LocationId}");
        contextAccessor.HttpContext.Session.SetString(LocatePlate.Infrastructure.Constant.SessionContants.LocationName, $"{LocationName}");
    }
    else if (restaurantList.Count() == 0)
    {
        contextAccessor.HttpContext.Session.Remove(LocatePlate.Infrastructure.Constant.SessionContants.RestaurantId);
        contextAccessor.HttpContext.Session.Remove(LocatePlate.Infrastructure.Constant.SessionContants.RestaurantName);
        contextAccessor.HttpContext.Session.Remove(LocatePlate.Infrastructure.Constant.SessionContants.LocationId);
        contextAccessor.HttpContext.Session.Remove(LocatePlate.Infrastructure.Constant.SessionContants.LocationName);
    }

    //    restaurantList.ForEach(c => restaurants.Add(
    //new SelectListItem { Text = c.Name, Value = $"{c.Id}", Group = $"{c.LocationId}", Selected = (c.Id == RestaurantId) }
    //)); ;

}

<div class="form-group">
    <label class="control-label"></label>
    @if (restaurantList.Count > 1)
    {
        <select class="form-control" id="restaurantlist">
            <option value="@Guid.Empty"> Select</option>
            @foreach (var rest in restaurantList)
            {
                @if (rest.Id == RestaurantId)
                {
                    <option value="@rest.Id" selected data-loc="@rest.LocationId" data-loc-name="@rest.CityName"> @rest.Name</option>
                }
                else
                {
                    <option value="@rest.Id" data-loc="@rest.LocationId" data-loc-name="@rest.CityName"> @rest.Name</option>
                }
            }
        </select>
    }
    else if (restaurantList.Count == 1)
    {
        <h5 class="mb-0 font-weight-medium d-none d-lg-flex">@restaurantList.FirstOrDefault().Name dashboard!</h5>
    }
</div>

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script>
    $(document).ready(function () {
            $("#restaurantlist").on("change", function (e) {
                SetCurrentRestaurant();
            });

        function SetCurrentRestaurant() {
            var restaurantId = $("#restaurantlist option:selected").val();
            var restaurantName = $("#restaurantlist option:selected").text();
            var LocationId = $("#restaurantlist option:selected").attr("data-loc");
            var LocationName = $("#restaurantlist option:selected").attr(" data-loc-name");
            if (LocationId != undefined)
                $.ajax({
                    type: "POST",
                    url: `/Session/SetSessionString/@SessionContants.RestaurantId/${restaurantId}/@SessionContants.RestaurantName/${restaurantName}/@SessionContants.LocationId/${LocationId}/@SessionContants.LocationName/${LocationName}`,
                    //data: JSON.stringify({"value": restaurantId }),
                    //contentType: "application/json; charset=utf-8",
                    //dataType: "json",
                    success: function (msg) {
                        // Do something interesting here.
                        window.location.reload(true);
                    }
                });
        }
    });
</script>